local handle = io.popen('cat ~/.cache/wal/colors.sh | grep -m 10 "color[0-9]" | sed -e "s/\'//g" | tee ~/.conkycolors 2> /dev/null')
local result = handle:read("*a")
handle:close()

local colorsFile = os.getenv ( "HOME" )..'/.conkycolors' 
function file_exists(file)
    local f = io.open(file, "rb")
    if f then f:close() end
    return f ~= nil
end

function load_colors(file)
    if not file_exists(file) then
        print("'.conkycolors' file not found")
        -- some default colors
        conky.config["color0"] = "#0a0708"
        conky.config["color1"] = "#6096A5"
        conky.config["color2"] = "#59B1D4"
        conky.config["color3"] = "#69B3CF"
        conky.config["color4"] = "#61B6DC"
        conky.config["color5"] = "#92A3A7"
        conky.config["color6"] = "#96C2CE"
        conky.config["color7"] = "#e0e5e7"
        conky.config["color8"] = "#9ca0a1"
        conky.config["color9"] = "#6096A5"
    end
    for line in io.lines(file) do
        print(line)
        line = " "..line.."\n"
        for k, v in string.gmatch(line, "(%S-)=(%S-)\n") do
            conky.config[k] = v
        end
    end
end

conky.config = {
    own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
    own_window_transparent = true,
    own_window_argb_visual = true,
    own_window_argb_value = 0,
    own_window_colour = '000000',
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'override',
    alignment = 'middle_right',
    background = true,
    border_width = 1,
    cpu_avg_samples = 3,
    default_shade_color = '090909',
    double_buffer = true,
    use_xft = true,
    font = 'Ubuntu Mono:size=11',
    gap_y = 0,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    extra_newline = false,
    update_interval = 1.0,
    default_bar_width = 160,
    uppercase = false,
}
load_colors(colorsFile)
conky.text = [[
${voffset 8}${color1}${font Bitstream Vera Sans:size=16}${time %A}$font\
${voffset -8}$alignr${color8}${font Bitstream Vera Sans:size=38}${time %e}$font
${color8}${voffset -30}${color8}${font Bitstream Vera Sans:size=18}${time %b}$font\
${voffset -3} ${color8}${font Bitstream Vera Sans:size=20}${time %Y}$font${color8}$hr
#

$nodename $kernel ($machine)
${color2}Uptime:${color8} $uptime
${color2}Updates:${color8} ${execi 3600 /usr/bin/pacman -Qu | tail -n +6 | wc -l}

${color1}CPU ${color8}$hr

${color2}Name:${color3}${exec lscpu | grep name | tr -s ' ' | cut -d ':' -f2 | cut -c -28}
${if_existing /sys/devices/system/cpu/cpu0}${color8}${cpubar cpu1 8, 160}${endif}  ${if_existing /sys/devices/system/cpu/cpu2}${cpubar cpu3 8, 160}${endif}
${if_existing /sys/devices/system/cpu/cpu1}${color8}${cpubar cpu2 8, 160}${endif}  ${if_existing /sys/devices/system/cpu/cpu3}${cpubar cpu4 8, 160}${endif}
${if_existing /sys/devices/system/cpu/cpu4}${color8}${cpubar cpu5 8, 160}${endif}  ${if_existing /sys/devices/system/cpu/cpu6}${cpubar cpu7 8, 160}${endif}
${if_existing /sys/devices/system/cpu/cpu5}${color8}${cpubar cpu6 8, 160}${endif}  ${if_existing /sys/devices/system/cpu/cpu7}${cpubar cpu8 8, 160}${endif}
${color2}Temp:${color8} ${exec sensors | grep "Package id 0:" | awk '{print $4}' | tr -d "+"} ${color2}Proc: ${color8}${processes} ${color2}Freq: ${color8}${freq_g}GHz ${color2}Max: ${color8}${exec awk "BEGIN { print $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq) / 1000000 }"}GHz

${color2}${top name 1}$alignr${color8}${top pid 1}${top cpu 1}%
${color2}${top name 2}$alignr${color8}${top pid 2}${top cpu 2}%
${color2}${top name 3}$alignr${color8}${top pid 3}${top cpu 3}%
${color2}${top name 4}$alignr${color8}${top pid 4}${top cpu 4}%

${color1}Battery ${color8}$hr

${if_match "Discharging" == "${exec acpi | awk '{print $3}' | cut -d ',' -f1}"}\
${color2}Remaining: ${color8}${exec acpi | awk '{print $5}'}${else}\
${if_match "Charging" == "${exec acpi | awk '{print $3}' | cut -d ',' -f1}"}\
${color2}Charging: ${color8}${exec acpi | awk '{print $5}'}${endif}${endif} ${alignr}${exec acpi | awk '{print $4}' | cut -d ',' -f1} ${execbar exec acpi | awk '{print $4}' | cut -d ',' -f1}

${color1}RAM ${color8}$hr

${color2}Percent:${color8} $memperc% ${membar 8, 240}
${color2}Usage:  ${color8} $mem / $memmax

${color2}${top_mem name 1}$alignr${color8}${top_mem pid 1} ${top_mem mem_res 1}
${color2}${top_mem name 2}$alignr${color8}${top_mem pid 2} ${top_mem mem_res 2}
${color2}${top_mem name 3}$alignr${color8}${top_mem pid 3} ${top_mem mem_res 3}
${color2}${top_mem name 4}$alignr${color8}${top_mem pid 4} ${top_mem mem_res 4}

${color1}File systems ${color8} $hr

${color2}/ ${color8}${alignr}${fs_free /}/${fs_size /} ${fs_bar 6 /}
${color2}/home ${color8}${alignr}${fs_free /home}/${fs_size /home} ${fs_bar 6 /home}
${color2}I/O: ${color8}$diskio_write / $diskio_read

${color1}Networking ${color8}$hr
${if_existing /proc/net/route wlp2s0}\
${color2}UP:${color8} ${upspeed wlp2s0} ${color2}${alignr 10}DOWN: ${color8} ${downspeed wlp2s0}
${upspeedgraph wlp2s0 40,160 -l}  ${downspeedgraph wlp2s0 40,160 -l}${endif}
${if_existing /proc/net/route wlo1}\
${color2}UP:${color8} ${upspeed wlo1}${color2}${alignr 10}DOWN: ${color8} ${downspeed wlo1}
${upspeedgraph wlo1 40,160 -l}  ${downspeedgraph wlo1 40,160 -l}
${color2}Signal: ${color8}${wireless_link_qual_perc wlo1}% ${wireless_link_bar 6, 240 wlo1}
${color2}SSID: ${color8} ${wireless_essid wlo1}${endif}

${color1}Repositories ${color8}$hr

${execi 600 CODE=/home/nik/Code /home/nik/Code/c/cgs/build/cgs --no-color}
]]
