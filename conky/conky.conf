local colorsFile = os.getenv ( "HOME" )..'/.conkycolors' 
function file_exists(file)
    local f = io.open(file, "rb")
    if f then f:close() end
    return f ~= nil
end

function load_colors(file)
    if not file_exists(file) then
        print("'.conkycolors' file not found")
        -- some default colors
        conky.config["color0"] = "#101012"
        conky.config["color1"] = "#F74D15"
        conky.config["color2"] = "#FF6D00"
        conky.config["color3"] = "#F79204"
        conky.config["color4"] = "#FFB003"
        conky.config["color5"] = "#FFC601"
        conky.config["color6"] = "#FFE50B"
        conky.config["color7"] = "#e8d2a3"
        conky.config["color8"] = "#a29372"
        conky.config["color9"] = "#F74D15"
        
    end
    for line in io.lines(file) do
        print(line)
        line = " "..line.."\n"
        for k, v in string.gmatch(line, "(%S-)=(%S-)\n") do
            conky.config[k] = v
        end
    end
end  
  
conky.config = {
    own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
    own_window_transparent = false,
    own_window_argb_visual = true,
    own_window_argb_value = 0,
    own_window_colour = '000000',
    alignment = 'middle_right',
    background = true,
    border_width = 1,
    cpu_avg_samples = 3,
    default_shade_color = '090909',
    double_buffer = true,
    use_xft = true,
    font = 'Ubuntu Mono:size=10',
    gap_y = 0,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    extra_newline = false,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    update_interval = 1.0,
    uppercase = false,
    default_bar_width = 160,
}
load_colors(colorsFile)

conky.text = [[
${voffset 8}${color1}${font Bitstream Vera Sans:size=16}${time %A}$font\
${voffset -8}$alignr${color1}${font Bitstream Vera Sans:size=38}${time %e}$font
${color8}${voffset -30}${color8}${font Bitstream Vera Sans:size=18}${time %b}$font\
${voffset -3} ${color8}${font Bitstream Vera Sans:size=20}${time %Y}$font${color8}$hr

$nodename $kernel ($machine)
${color2}Uptime:${color8} $uptime
${color2}Updates:${color8} ${execi 3600 /usr/bin/pacman -Qu | tail -n +6 | wc -l}

${color1}CPU ${color8}$hr

${color2}Name:${color8}3${exec lscpu | grep name | tr -s ' ' | cut -d ':' -f2 | cut -c -28}
${color8}${cpubar cpu1 8, 160}  ${cpubar cpu9  8, 160}
${color8}${cpubar cpu2 8, 160}  ${cpubar cpu10 8, 160}
${color8}${cpubar cpu3 8, 160}  ${cpubar cpu11 8, 160}
${color8}${cpubar cpu4 8, 160}  ${cpubar cpu12 8, 160}
${color8}${cpubar cpu5 8, 160}  ${cpubar cpu13 8, 160}
${color8}${cpubar cpu6 8, 160}  ${cpubar cpu14 8, 160}
${color8}${cpubar cpu7 8, 160}  ${cpubar cpu15 8, 160}
${color8}${cpubar cpu8 8, 160}  ${cpubar cpu16 8, 160}
${color2}Temp:${color8} ${exec sensors | grep Tdie | awk '{print $2}'} ${color2}Procs: ${color8}${processes} ${color2}Freq: ${color8}${freq_g}GHz${alignr}${color2}Total: ${color8}${cpu cpu0}%

${color2}${top name 1}$alignr${color8}${top pid 1} ${top cpu 1}%
${color2}${top name 2}$alignr${color8}${top pid 2} ${top cpu 2}%
${color2}${top name 3}$alignr${color8}${top pid 3} ${top cpu 3}%
${color2}${top name 4}$alignr${color8}${top pid 4} ${top cpu 4}%

${color1}GPU ${color8}$hr

${color2}Name: ${color8}${exec nvidia-smi --format=csv,noheader --query-gpu=name}
${color8}${execbar nvidia-smi --format=csv,noheader --query-gpu=utilization.gpu}  ${color8}${execbar nvidia-smi --format=csv,noheader --query-gpu=utilization.memory}
${color2}Utilization: ${color8}${exec nvidia-smi --format=csv,noheader --query-gpu=utilization.gpu}$alignr${color2}Memory: ${color8}${exec nvidia-smi --format=csv,noheader --query-gpu=memory.used | cut -d ' ' -f1}/${exec nvidia-smi --format=csv,noheader --query-gpu=memory.total} \

${color2}Temp:${color8} +${exec nvidia-smi --format=csv,noheader --query-gpu=temperature.gpu} C \
${color2}State: ${color8}${exec nvidia-smi --format=csv,noheader --query-gpu=pstate}

${color1}RAM ${color8}$hr

${color2}Percent:${color8} $memperc% ${membar 8, 240}
${color2}Usage:  ${color8} $mem / $memmax

${color8}${top_mem name 1}$alignr${color8}${top_mem pid 1} ${top_mem mem_res 1}
${color8}${top_mem name 2}$alignr${color8}${top_mem pid 2} ${top_mem mem_res 2}
${color8}${top_mem name 3}$alignr${color8}${top_mem pid 3} ${top_mem mem_res 3}
${color8}${top_mem name 4}$alignr${color8}${top_mem pid 4} ${top_mem mem_res 4}

${color1}File systems ${color8} $hr

${color2}/ $alignr${color8}${fs_free /}/${fs_size /} ${fs_bar 6 /}
${color2}/home $alignr${color8}${fs_free /home}/${fs_size /home} ${fs_bar 6 /home}
${color2}/sda1 $alignr${color8}${fs_free /mnt/storage0}/${fs_size /mnt/storage0} ${fs_bar 6 /mnt/storage0}
${color2}I/O: ${color8}$diskio_write / $diskio_read

${color1}Networking ${color8}$hr
${if_existing /proc/net/route enp4s0}
${color2}UP:${color8} ${upspeed enp4s0}${color2}${alignr 10}DOWN: ${color8} ${downspeed enp4s0}
${upspeedgraph enp4s0 40,160 -l}  ${downspeedgraph enp4s0 40,160 -l}
${endif}
${color1}Repositories ${color8}$hr

${color3}${execi 600 CODE=/home/nik/Code /home/nik/Code/c/cgs/build/cgs --no-color}
]]