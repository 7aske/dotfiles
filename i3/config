# i3 config file (v4)
#  _____         _        _       _ _____                    __ _       
# |___  |_ _ ___| | _____( )___  (_)___ /    ___ ___  _ __  / _(_) __ _ 
#    / / _` / __| |/ / _ \// __| | | |_ \   / __/ _ \| '_ \| |_| |/ _` |
#   / / (_| \__ \   <  __/ \__ \ | |___) | | (_| (_) | | | |  _| | (_| |
#  /_/ \__,_|___/_|\_\___| |___/ |_|____/   \___\___/|_| |_|_| |_|\__, |
# 7aske's i3 config                                               |___/ 

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

# disable help button in most programs
bindsym F1 nop
                  
#    ___ _ ____   __
#   / _ \ '_ \ \ / /
#  |  __/ | | \ V / 
# (_)___|_| |_|\_/  
# env
# load default apps from environment
# set these variables in your .profile or .xprofile
# eg. EDITOR=nvim
set $editor $EDITOR
set $browser $BROWSER
set $file $FILE
set $file2 ranger
set $reader $READER
set $player $PLAYER

# set terminal commands
set $terminal urxvt
set $terminal2 kitty

# alternating split layout 
# https://github.com/olemartinorg/i3-alternating-layout
exec_always --no-startup-id python3 ~/.local/bin/alternating_layouts

# set background and theme using wal
exec --no-startup-id wal --backend wal -i ~/.config/wallpaper

# sound&music                _  ___                       _      
#  ___  ___  _   _ _ __   __| |( _ )  _ __ ___  _   _ ___(_) ___ 
# / __|/ _ \| | | | '_ \ / _` |/ _ \/\ '_ ` _ \| | | / __| |/ __|
# \__ \ (_) | |_| | | | | (_| | (_>  < | | | | | |_| \__ \ | (__ 
# |___/\___/ \__,_|_| |_|\__,_|\___/\/_| |_| |_|\__,_|___/_|\___|                                                               

# start pulseaudio in xprofile
# start pasystray in xprofile
bindsym $mod+p exec --no-startup-id pavucontrol
# 7aske-scripts
bindsym $mod+Ctrl+p exec --no-startup-id patoggle 
# 7aske-scripts
bindsym $mod+Shift+p exec --no-startup-id padefault
# 7aske-scripts
bindsym $mod+Ctrl+Shift+p exec --no-startup-id pafocus

# Screen brightness controls
# bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 10; notify-send 'brightness up'"
# bindsym XF86MonBrightnessDown exec --no-startup-id "xbacklight -dec 10; notify-send 'brightness down'"

# Media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# media controls re-using i3blocks script
bindsym $mod+period exec --no-startup-id BLOCK_BUTTON=1 ~/Code/sh/utils-sh/statusbar/music
bindsym $mod+slash exec --no-startup-id BLOCK_BUTTON=2 ~/Code/sh/utils-sh/statusbar/music
bindsym $mod+comma exec --no-startup-id BLOCK_BUTTON=3 ~/Code/sh/utils-sh/statusbar/music

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% && notify-send "volume" "+5%"
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% && notify-send "volume" "-5%"
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle && notify-send "volume" "toggle mute"


#                    _ _           _   _                 
#   __ _ _ __  _ __ | (_) ___ __ _| |_(_) ___  _ __  ___ 
#  / _` | '_ \| '_ \| | |/ __/ _` | __| |/ _ \| '_ \/ __|
# | (_| | |_) | |_) | | | (_| (_| | |_| | (_) | | | \__ \
#  \__,_| .__/| .__/|_|_|\___\__,_|\__|_|\___/|_| |_|___/
# applic|_|ati|_|ons                                        
bindsym $mod+Return exec --no-startup-id $terminal
bindsym $mod+BackSpace exec --no-startup-id i3btf $terminal2 --class floating
bindsym $mod+Shift+Return exec --no-startup-id $terminal2
bindsym $mod+a exec --no-startup-id rofi -show run
bindsym $mod+d exec --no-startup-id dmenu_run -fn 'Fira Code-12'
bindsym $mod+grave exec --no-startup-id $terminal -e htop
bindsym $mod+Shift+grave exec --no-startup-id $terminal -e $editor ~/.config/i3/config
bindsym $mod+e exec --no-startup-id $file
bindsym $mod+Shift+e exec --no-startup-id $terminal2 bash -i $file2
bindsym $mod+Shift+v exec --no-startup-id $terminal $editor
bindsym $mod+w exec --no-startup-id $browser
bindsym $mod+Shift+w exec --no-startup-id $browser --incognito
# 7aske-scripts
bindsym $mod+Shift+d exec --no-startup-id dunst_reload && notify-send "dunst" "dunst reloaded"
bindsym Print --release exec --no-startup-id scrot && notify-send "screenshot" "saved to homedir"
bindsym $mod+Print --release exec --no-startup-id scrot -u && notify-send "screenshot (window)" "saved to homedir"
bindsym $mod+Shift+Print --release exec --no-startup-id scrot -s -f -l style=dash -o /dev/stdout | xclip -sel c -t image/png && notify-send "screenshot (selection)" "copied to clipboard"
bindsym $mod+Shift+x --release exec --no-startup-id xkill
# 7aske-scripts
bindsym $mod+i exec --no-startup-id i3btf $player
# 7aske-scripts
bindsym $mod+o exec --no-startup-id TYPE=term ROFI=1 codeopen
# 7aske-scripts
bindsym $mod+Shift+o exec --no-startup-id TYPE=vscode ROFI=1 codeopen
# 7aske-scripts
bindsym $mod+Ctrl+o exec --no-startup-id TYPE=jetbrains ROFI=1 codeopen
bindsym $mod+v exec --no-startup-id clipmenu
# 7aske-scripts
bindsym $mod+F2 exec --no-startup-id kblang -fn 'Fira Code-12'
# 7aske-scripts
bindsym $mod+Shift+s exec --no-startup-id google-search
bindsym $mod+Tab exec --no-startup-id rofi -show window

#                    _             _   _             
#  _ __   __ ___   _(_) __ _  __ _| |_(_) ___  _ __  
# | '_ \ / _` \ \ / / |/ _` |/ _` | __| |/ _ \| '_ \ 
# | | | | (_| |\ V /| | (_| | (_| | |_| | (_) | | | |
# |_| |_|\__,_| \_/ |_|\__, |\__,_|\__|_|\___/|_| |_|
# navigation                 |___/                         
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# windows   _           _                   
# __      _(_)_ __   __| | _____      _____ 
# \ \ /\ / / | '_ \ / _` |/ _ \ \ /\ / / __|
#  \ V  V /| | | | | (_| | (_) \ V  V /\__ \
#   \_/\_/ |_|_| |_|\__,_|\___/ \_/\_/ |___/
# set title format
font xft:Fira Code Medium 12
for_window [class=".*"] title_format " %title"

# some role configuration
for_window [class="floating"] floating enable

# configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
#hide_edge_borders smart

# use Mouse+$mod to drag floating windows
floating_modifier $mod

# float and center the current window
bindsym $mod+c floating enable; move position center

# change borders
bindsym $mod+u border toggle 1; exec --no-startup-id notify-send "border" "border toggled"

# kill focused window
bindsym $mod+q kill

# split orientation
bindsym $mod+Ctrl+v split toggle; exec --no-startup-id notify-send 'toggled tiling'

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle; exec --no-startup-id notify-send "fullscreen" "fullscreen toggled"

# Toggle floating/tiling
bindsym $mod+t floating toggle; exec --no-startup-id notify-send "floating" "floating toggled"

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle; exec --no-startup-id notify-send "floating" "floating toggled"

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# toggle sticky
bindsym $mod+s sticky toggle; exec --no-startup-id notify-send "sticky" "sticky toggled"

# switch to workspace with urgent window automatically
for_window [urgent="latest"] focus
focus_on_window_activation focus

# layout toggling mode
bindsym $mod+Shift+t mode "$mode_layout"
set $mode_layout set window layout: (d)efault (t)abbed (s)tacking
mode "$mode_layout" {
    # set default desktop layout <stacking|tabbed>
    bindsym t layout tabbed; exec --no-startup-id notify-send "layout" "switched to tabbed layout", mode "default"
    bindsym s layout stacking; exec --no-startup-id notify-send "layout" "switched to stacking layout", mode "default"
    bindsym d layout default; exec --no-startup-id notify-send "layout" "switched to default layout", mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

#                     _                                  
# __      _____  _ __| | _____ _ __   __ _  ___ ___  ___ 
# \ \ /\ / / _ \| '__| |/ / __| '_ \ / _` |/ __/ _ \/ __|
#  \ V  V / (_) | |  |   <\__ \ |_) | (_| | (_|  __/\__ \
#   \_/\_/ \___/|_|  |_|\_\___/ .__/ \__,_|\___\___||___/
# workspaces                  |_|                        
# workspace names
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9

# Move workspaces to other windows
bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Up move workspace to output up
bindsym $mod+Ctrl+Right move workspace to output right
bindsym $mod+Ctrl+Down move workspace to output down

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
bindsym $mod+minus scratchpad show

#navigate workspaces next / previous
bindsym $mod+Ctrl+Shift+Right workspace next
bindsym $mod+Ctrl+Shift+Left workspace prev

#                      _  __ _                 _           _                   
#  ___ _ __   ___  ___(_)/ _(_) ___  __      _(_)_ __   __| | _____      _____ 
# / __| '_ \ / _ \/ __| | |_| |/ __| \ \ /\ / / | '_ \ / _` |/ _ \ \ /\ / / __|
# \__ \ |_) |  __/ (__| |  _| | (__   \ V  V /| | | | | (_| | (_) \ V  V /\__ \
# |___/ .__/ \___|\___|_|_| |_|\___|   \_/\_/ |_|_| |_|\__,_|\___/ \_/\_/ |___/
# spec|_|ific window settings 
# Open applications on specific workspaces
assign [class="(?i)caprine"] $ws9
assign [class="(?i)discord"] $ws9
assign [class="(?i)viber"] $ws9
assign [class="(?i)telegram-desktop"] $ws9
# for_window [class="(?i)spotify"] move to workspace $ws9

# Open specific applications in floating mode
for_window [title="alsamixer"] floating enable border pixel 1
for_window [title="File Transfer*"] floating enable
for_window [class="fpakman"] floating enable
for_window [class="(?i)gnome-calculator"] floating enable border pixel 1
for_window [class="(?i)gnome-disks"] floating enable border pixel 1
for_window [class="java-lang-Thread"] floating enable border pixel 1 move position center
for_window [title="Lutris"] floating enable border pixel 1 move position center
for_window [class="(?i)jetbrains-toolbox"] floating enable border pixel 1
for_window [title="win0"] floating enable border pixel 1 move position center
for_window [class="(?i)GParted"] floating enable border normal
for_window [title="i3_help"] floating enable sticky enable border normal
for_window [class="Lightdm-settings"] floating enable
for_window [class="Lxappearance"] floating enable sticky enable border normal
for_window [class="Manjaro-hello"] floating enable
for_window [class="Manjaro Settings Manager"] floating enable border normal
for_window [title="MuseScore: Play Panel"] floating enable
for_window [class="Nitrogen"] floating enable sticky enable border normal
for_window [class="(?i)nm-connection-editor"] floating enable border normal
for_window [class="Oblogout"] fullscreen enable
for_window [class="octopi"] floating enable
for_window [title="About Pale Moon"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [class="Pavucontrol"] floating enable sticky enable resize set 640 480
for_window [class="qt5ct"] floating enable sticky enable border normal
for_window [class="Qtconfig-qt4"] floating enable sticky enable border normal
for_window [class="Simple-scan"] floating enable border normal
for_window [class="(?i)System-config-printer.py"] floating enable border normal
for_window [class="Timeset-gui"] floating enable border normal
for_window [class="(?i)virtualbox"] floating enable border normal
for_window [class="(?i)anydesk.bin"] floating enable border normal
for_window [class="Xfburn"] floating enable
for_window [class="VirtualBox Machine"] floating disable border pixel 1
for_window [class="VirtualBox Manager"] floating disable
for_window [class="Baobab"] floating enable resize set 1024 720 move position center
for_window [title=".*Emulator.*"] floating enable
for_window [title=".*World of Warcraft.*"] layout tabbed


#            _                                                          _     
#  _ __ ___ (_)___  ___    ___ ___  _ __ ___  _ __ ___   __ _ _ __   __| |___ 
# | '_ ` _ \| / __|/ __|  / __/ _ \| '_ ` _ \| '_ ` _ \ / _` | '_ \ / _` / __|
# | | | | | | \__ \ (__  | (_| (_) | | | | | | | | | | | (_| | | | | (_| \__ \
# |_| |_| |_|_|___/\___|  \___\___/|_| |_| |_|_| |_| |_|\__,_|_| |_|\__,_|___/
# misc commands

# reload the configuration file
bindsym $mod+Shift+c reload; exec --no-startup-id notify-send "config" "i3 config reloaded"

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart; exec --no-startup-id notify-send "restart" "i3 restarted"

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+0 exec --no-startup-id "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+F4 exec --no-startup-id i3-layout-manager

# mode to invoke my startup management script
bindsym $mod+F3 mode "$mode_startup"
set $mode_startup startup (r)estart (s)top s(t)art (a)dd re(m)ove
mode "$mode_startup" {
    bindsym r exec --no-startup-id startup restart, mode "default"
    bindsym t exec --no-startup-id startup start, mode "default"
    bindsym s exec --no-startup-id startup stop, mode "default"
    bindsym a exec --no-startup-id echo | dmenu -fn 'Fira Code-12' | xargs -d'\n' startup add, mode "default"
    bindsym m exec --no-startup-id startup remove, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Set shut down, restart and locking features
bindsym $mod+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#              _            _             _   
#   __ _ _   _| |_ ___  ___| |_ __ _ _ __| |_ 
#  / _` | | | | __/ _ \/ __| __/ _` | '__| __|
# | (_| | |_| | || (_) \__ \ || (_| | |  | |_ 
#  \__,_|\__,_|\__\___/|___/\__\__,_|_|   \__|
# autostart                                            

# its better to handle your autostart applications through .xprofile

# exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# exec --no-startup-id nitrogen --restore; sleep 1; compton -b
# exec --no-startup-id nm-applet
# exec --no-startup-id xfce4-power-manager
# exec --no-startup-id pamac-tray
# exec --no-startup-id barrier
# exec --no-startup-id clipmenud
# exec --no-startup-id xautolock -time 10 -locker blurlock -corners +---
# exec_always --no-startup-id fix_xcursor

# touchpad and keyboard config
# exec_always --no-startup-id ~/Code/sh/utils-sh/fix_touchpad.sh
# exec_always --no-startup-id xset r rate 195 55

#            _                
#   ___ ___ | | ___  _ __ ___ 
#  / __/ _ \| |/ _ \| '__/ __|
# | (_| (_) | | (_) | |  \__ \
#  \___\___/|_|\___/|_|  |___/
# Color palette used for the terminal ( ~/.Xresources file )
# Colors are parsed from wal (python-pywal)
set_from_resource $background background
set_from_resource $foreground foreground
set_from_resource $color0     i3wm.color0
set_from_resource $color1     i3wm.color1
set_from_resource $color2     i3wm.color2
set_from_resource $color3     i3wm.color3
set_from_resource $color4     i3wm.color4
set_from_resource $color5     i3wm.color5
set_from_resource $color6     i3wm.color6
set_from_resource $color7     i3wm.color7
set_from_resource $color8     i3wm.color8
set_from_resource $color9     i3wm.color9
set_from_resource $color10    i3wm.color10
set_from_resource $color11    i3wm.color11
set_from_resource $color12    i3wm.color12
set_from_resource $color13    i3wm.color13
set_from_resource $color14    i3wm.color14
set_from_resource $color15    i3wm.color15

# Theme colors
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class                  border  background    texture indicator   cborder
client.focused          $color3         $fg    $color3   $color3       $color3
client.focused_inactive     $bg         $bg        $fg       $bg       $bg
client.unfocused            $bg         $bg        $fg       $bg       $bg
client.urgent               $bg         $bg        $fg       $bg       $bg
client.placeholder          $bg         $bg        $fg       $bg       $bg
client.background           $bg

#      _        _               _                
#  ___| |_ __ _| |_ _   _ ___  | |__   __ _ _ __ 
# / __| __/ _` | __| | | / __| | '_ \ / _` | '__|
# \__ \ || (_| | |_| |_| \__ \ | |_) | (_| | |   
# |___/\__\__,_|\__|\__,_|___/ |_.__/ \__,_|_|   
# status bar

# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
	status_command i3blocks
    position top

	tray_output primary

    # disable scroll wheel
	#bindsym button4 nop
	#bindsym button5 nop

    font xft:Fira Code Medium 10
	strip_workspace_numbers yes

    colors {
        #background $background
        background $background
        statusline $color1
        separator  $color1

        #                     border      background        text
        focused_workspace    $color2         $color5 $background
        active_workspace     $color2         $color9     $color0
        inactive_workspace   $color2     $background $foreground
        binding_mode        $color13        $color13     $color0
        urgent_workspace     $color2         $color5 $background
    }
}

# hide/unhide status bar
bindsym $mod+m bar mode toggle

#  _ _____                             
# (_)___ /        __ _  __ _ _ __  ___ 
# | | |_ \ _____ / _` |/ _` | '_ \/ __|
# | |___) |_____| (_| | (_| | |_) \__ \
# |_|____/       \__, |\__,_| .__/|___/
# i3-gaps        |___/      |_|

# Set inner/outer gaps
gaps inner 10
gaps outer -6
bindsym $mod+g gaps inner all set 10; gaps outer all set -6; exec --no-startup-id notify-send "gaps" "gaps reset to default"
bindsym $mod+Ctrl+g gaps inner all set 1; gaps outer all set 1; exec --no-startup-id notify-send "gaps" "disabled gaps"

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
smart_borders no_gaps #on|no_gaps

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
